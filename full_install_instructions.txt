Installing face recognition system demo:

**These instructions assume the user is working with a Mac OSX system**

1. This project was developed with Python 2.7. If this is not yet installed on your Mac, you can find it from https://www.python.org/downloads/mac-osx/

2. Install pip. pip is a user friendly wrapper around Python Setuptools, allowing you to easily install libraries. You can download setup tools from https://pypi.python.org/pypi/setuptools

After extracting the files, in the terminal navigate to the extract folder (i.e. setuptools-27.2.0), then run 

sudo python ez_setup.py

After a successful installation, you can install pip with

sudo easy_install pip

3. Make sure cmake is installed. You can install with 
brew install cmake

4. My recommendation for running this system is to use a virtual environment for development. This will allow you to install the necessary libaries and packages needed for this project within the virtualenv, without worrying about accidently deleting or switching to uncompatible versions. 

pip install virtualenv

Make a virtual env with

virtualenv facevenv
cd facevenv

Then to switch to it within your Terminal, run 

source bin/activate

5. Clone this repo from git 

git clone https://github.com/skwang/EEfaces.git

6. Now, we should install the necessary packages used with this project, within our virtual env. On github, there is a pip_requirements.txt file which contains all the packages that are installable through pip, and the versions which were used with this project. We can install these using 

pip install numpy
pip install -r pip_requirements.txt

7. Install packages not available through pip. There are a number of packages unavailable through pip. We must install these separately:

pip install --upgrade https://github.com/Theano/Theano/archive/master.zip
pip install --upgrade https://github.com/Lasagne/Lasagne/archive/master.zip

Download boost from boost.org 
unzip and cd to where you opened that folder
./bootstrap.sh --with-libraries=python
./b2
sudo ./b2 install

Download from https://pypi.python.org/pypi/dlib
unzip and cd to where you opened that folder
python setup.py install

8. Install OpenCV. This will take a while (hour+). Download opencv3.1.0.zip http://opencv.org/downloads.html, extract to a folder.

Modify code to fix the webcam issue with opencv3.1.0 waitKey(): 
    see https://github.com/Itseez/opencv/pull/6051/commits/a2bda999211e8be9fbc5d40038fdfc9399de31fc

cd opencv-3.1.0 (or wherever that folder is)
mkdir build
cd build
cmake -D MAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=$VIRTUAL_ENV/ -D PYTHON_EXECUTABLE=$VIRTUAL_ENV/bin/python -D PYTHON_PACKAGES_PATH=$VIRTUAL_ENV/lib/python2.7/site-packages -D INSTALL_PYTHON_EXAMPLES=ON -D ..
make
make install

Also need to edit the python path variable, within the virtual env, so that the opencv libraries can be found by your python binary

export PYTHONPATH="${PYTHONPATH}:PATH/TO/opencv-3.1.0/build/lib"

9. Install Torch. Needed for the openface recognizer. Needs homebrew to be installed (which it should be already). Note this will also take a while (hour+).
git clone https://github.com/torch/distro.git ~/torch --recursive
cd ~/torch; bash install-deps;
./install.sh
source ~/.profile
luarocks install dpnn


10. Clone the openface repo.
git clone https://github.com/cmusatyalab/openface.git
cd TO_THE_OPENFACE_REPO
sudo python setup.py install
models/get-models.sh

11. Test the installation. You can use facerec_system.py. Make sure it has at least 3 individuals in the training set.
python facerec_system.py -t "RELATIVE/PATH/TO/TRAINING/DIR" 


